#DATA TYPES AND DATA WRANGLING
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt 


#Solution to Question 1
A = [1,2,3,4,5,6] 
B = [13, 21, 34]
A.extend(B)


#Solution to Question 2
np.identity(3)

       
fuel_data = pd.read_csv('fuel_ferc1.csv')
df=pd.DataFrame(fuel_data)
df.describe(include='all')


# Solution to question 3
#Which of the following fuel type code has the lowest average fuel cost per unit burned?

Avr_fuel_cost = df.groupby('fuel_type_code_pudl')['fuel_cost_per_unit_burned'].mean()

print(Avr_fuel_cost)
# Answer is : None of the above. Because "Others has the lowest average fuel cost"


# Solution to question 4
#What is the standard deviation and 75th percentile of the measure of 
#energy per unit (Fuel_mmbtu_per_unit) in two decimal places?

df['fuel_mmbtu_per_unit'].describe().round(2)
#Answer is 10.60 and 17.01


#Solution to question 5

#What is the skewness and kurtosis for the fuel quantity burned in two decimal places?

print(df['fuel_qty_burned'].skew().round(2))
print(df['fuel_qty_burned'].kurt().round(2))
# Answer is 15.85 and 651.37


#Solution to question 6
#Which feature has missing values and what is the total number of missing value and percentage
#of the missing rows as a factor of the total number of rows in three decimal places?
#(Enter answer in the format: Feature: xxx, Total: xxx, Percent: xxx)

print(df.isnull().sum())
Percent_missing = (180/29523*100)
print(round(Percent_missing, 3))

#Answer = (Feature:fuel_unit, Total:180, Percent:0.61)


#Solution to question 7

#The feature with missing values falls under what category? 
# What missing value imputation technique would you use?

# Answer = Categorical and mode imputation



#Solution to question 8
#Which of the features has the second and third lowest correlation with the Fuel Cost Per Unit Burned?

correlation_df = df.corr().abs()  #we call the absolute method in order to ignore the sign as we are only interested in the magnitude and not direction. 
print(correlation_df['fuel_cost_per_unit_burned'])
print(correlation_df['fuel_cost_per_unit_burned'].sort_values())

# Answer:  Second and Third Lowest Correlation with Fuel Cost Per Unit Burned are; 
    # fuel_mmbtu_per_unit (0.010034) and fuel_cost_per_unit_delivered (0.011007)
    

# Solution to question 9
#For the fuel type coal, what is the percentage change in the fuel cost per unit burned in 1998 compared to 1994?

df.loc[df.fuel_type_code_pudl =='coal', ['report_year', 'fuel_cost_per_unit_burned']]


df1 = df.loc[ df.fuel_type_code_pudl =='coal', 'fuel_cost_per_unit_burned']
dfa = print(df1.iloc[0:475].reset_index(drop=True).sum())
dfb = print(df1.iloc[1798:2229].reset_index(drop=True).sum())
dfc = print(df1.sum())

#percentage_change = ((dfa - dfb)/dfc)*100
percentage_change = (14984.572 - 11902.597)/576254.381*100
percentage_change = print (round(percentage_change, 2)) # = 0.53%

#Answer = None of the above


#Sokution to question 10 
#Which year has the highest average fuel cost per unit delivered?
Answer_10 = df.groupby('report_year')['fuel_cost_per_unit_delivered'].mean().sort_values()
Answer_10 # is 1997 



